# Node.js with webpack
# Build a Node.js project using the webpack CLI.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

#name: $(Major).$(Minor).$(Rev:r)
name: _$(Major).$(Minor).$(rev:r)

stages:
- stage: build
  displayName: 'Build'
  jobs:
  - job: run_build
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    - task: TfxInstaller@2
      inputs:
        version: 'v0.6.x'
    - task: Npm@1
      inputs:
        command: 'install'

# Prod First
    - task: PackageAzureDevOpsExtension@2
      inputs:
        rootFolder: '$(Build.SourcesDirectory)'
        publisherId: '$(PublisherId)'
        extensionId: '$(ExtensionId)'
        extensionVersion: '$(Build.BuildNumber)'
        updateTasksVersion: true
        updateTasksId: true
        extensionVisibility: 'public'
        extensionPricing: 'free'

# DEV Second
    - task: RegexReplace@3
      inputs:
        InputSearchPattern: 'vss-extension.json'
        FindRegex: '"description": "'
        ReplaceRegex: '"description": "DEV: '
        UseUTF8: false
        UseRAW: true
    - task: PackageAzureDevOpsExtension@2
      inputs:
        rootFolder: '$(Build.SourcesDirectory)'
        publisherId: '$(PublisherId)'
        extensionId: '$(ExtensionId)'
        extensionVersion: '$(Build.BuildNumber)'
        extensionTag: '-DEV'
        updateTasksVersion: true
        extensionVisibility: 'private'
        extensionPricing: 'free'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
          *.vsix
        TargetFolder: '$(Build.ArtifactStagingDirectory)/release'
        cleanTargetFolder: true
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)/release
        artifactName: release